\documentclass[a4paper,11pt]{article}
\usepackage[english]{babel}
\usepackage[sc]{mathpazo}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}

%%% Document layout, margins
\usepackage{geometry} 
%\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\geometry{letterpaper,textwidth=6.5in,textheight=8in,marginparsep=1em}

%%%- personal commands
%\usepackage{FMcommands}

%%%- hyperref setup
\usepackage[hyphens]{url}
\usepackage[bookmarks,colorlinks,breaklinks,unicode,pdfstartpage=1,% 
  pdfborder={0 0 1},%
  pdftitle={Shiny Microbiome Tool Automated Report},%
  pdfauthor={Federico Mattiello}]{hyperref}
\hypersetup{linkcolor=ugent1,citecolor=ugent1,%
  filecolor=ugent1,urlcolor=black!70!red,% 
  pdfstartview={FitH},    % Fit, FitH, FitV, FitBH, FitBV, XYZ null null 1.00
  pdfpagelayout={OnePage}}    % OneColumn, SinglePage, TwoPageLeft }

%%%- for nice tables
\usepackage{booktabs}
\usepackage{tabularx}

%%%- authors in nice format (big caps)
\usepackage[affil-sl,auth-sc-lg]{authblk}

%%% Math packages
\usepackage{amsmath,amsfonts,amssymb}

%%% Date formatting, defn of isodate
\usepackage{datetime}
\renewcommand{\dateseparator}{-}
\newdateformat{isodate}{%
\THEYEAR\dateseparator\twodigit{\THEMONTH}\dateseparator\twodigit{\THEDAY}}

%%%- custom commands
\newcommand{\mbf}[1]{$\mathbf{#1}$}
\renewcommand{\tilde}{\widetilde}


%%% This is how you set  line spacing globally inside []
%%% Options are 'singlespacing','onehalfspacing','doublespacing'
%%% To change WITHIN the document (you want a section single spaced)
%%% just drop in, where needed, \singlespacing
%%% and then \doublespacing again when finished.
\usepackage[onehalfspacing]{setspace} 


%%% graphics and figures
\usepackage{graphicx} % for figures of all kinds
\graphicspath{figures/}
\usepackage{tikz}        % Package for drawing graphs
\usetikzlibrary{arrows}

%% Caption labels bold. Always left-align, do not center short ones.
%% Use . instead of : after label. Size option.
\usepackage[nooneline,labelsep=period,normalsize]{caption}
% \usepackage{dcolumn}          % enable decimal align tables
% \usepackage{wrapfig}          % wrappable figures


%%% How to treat new paragraphs: units are anything that latex
%%% understands: in, mm, pt, cm, [em, ex (typographic units!)]
\setlength{\parindent}{1em} % 1em  indent first line
%\setlength{\parskip}{0.5ex} % half x-height space between para
%\usepackage{indentfirst}





%%% Title and PDF setup
\title{Report File: Sample Size Determination for Case-Control Microbiome
Studies with Shiny}

%%%-     This is for documentclass *article* + *authblk*
\author[1]{Federico Mattiello}
\author[1,2]{Olivier Thas}
\author[3]{Bie Verbist}
% \author[1]{Bie Verbist}\footnotetext{%
% Federico Mattiello is a  PhD student%
% (e-mail:~\texttt{Federico.Mattiello@UGent.be}); Olivier Thas is a tenured %
% professor; and Bie Verbist is a postdoctoral researcher. All three work at the
% Faculty of Bioscience Engineering of Ghent University, Coupure Links 653, 9000
% Ghent, Belgium and they are members of the QSTAR consortium.}
% \affil[1]{QSTAR Consortium}
\affil[1]{%
    Department of Mathematical Modelling, Statistics and Bioinformatics,
    Ghent University, Belgium\vspace{1ex}}
\affil[2]{%
    National Institute for Applied Statistics Research Australia (NIASRA),
    School of Mathematics and Applied Statistics,
    University of Wollongong, Australia\vspace{1ex}}
\affil[3]{%
    Janssen Pharmaceutica, Turnhoutseweg 30, 2340 Beerse, Belgium.\vspace{1ex}}




\begin{document}
\maketitle


%%% Place whatever libraries you want in mainsetup 
% 'knitr' syntax
<<mainSetup, echo=FALSE, cache=FALSE, include=FALSE>>=
#home <- path.expand('~')
## global chunk and knitr options
#options(width = 80, 'reindent.spaces' = 2)
options('keep.space' = TRUE, 'keep.comment' = TRUE)
options('tidy.opts' = list('keep.blank.line' = TRUE, 'width.cutoff' = 80))
opts_chunk$`set`(out.width = '.75\\linewidth')
opts_chunk$`set`(fig.path = 'RPTfigures/', out.width = '\\textwidth', size = 'footnotesize')
opts_chunk$`set`(cache.path = 'RPTcache/', cache = TRUE)
knit_hooks$`set`(crop = hook_pdfcrop)
opts_knit$`set`(use.highlight = FALSE)     # if highlight doesn't work properly
#opts_knit$`set`(use.highlight = TRUE)
### setting highlighting scheme: 
#thm = knit_theme$get('default')
#thm = knit_theme$`get`('./mytheme.css') 
#knit_theme$`set`(thm)

## loading libraries
#library(xtable)
#library(gtools)
library(msWaldHMP)
## read external file containing all the code
#read_chunk('codeFile.R')
@
%

\section{INPUTS}
%%%
This report is automatically generated with the \Rprog package
\textbf{\ttfamily knitr}, (version \Sexpr{packageVersion('knitr')}).


Input parameters 
<<parameters, echo = TRUE>>=
print(input)
@



\section{OUTPUTS}
%%%
<<captions, echo = FALSE>>=
capPiPlot <- paste0('TryTryTry ')

if (input$entero == 'NO')
{
  capPiPlot <- paste0(
      'Ranked Abundance Distributions estimated from the data. ', 
      capPiPlot)
  main <- ''
} else
{
  capPiPlot <- paste0(
      'Ranked Abundance Distributions estimated from the data, ',
      'divided by enterotype. ', 
      capPiPlot)
  main <- 'Enterotype: \'Bacteroides\''
}
@



<<piPlots, fig.cap = capPiPlot, dependson = c('captions')>>=
if (input$entero == 'YES')
  layout (1L:3)

drawPiPlot(
    countsData = generatedCounts()$piDirList[[1L]], 
    piOneObj = piOne()$'piVec'[[1L]],
    piTwoObj = piTwo()$'piTwo'[[1L]], main = main, 
    ylab = 'Abundance Proportions', 
    theta = round(piOne()$'theta'[[1L]], 3L))

if (input$entero == 'YES')
{
  drawPiPlot(
      countsData = generatedCounts()$piDirList[[2L]], 
      piOneObj = piOne()$'piVec'[[2L]],
      piTwoObj = piTwo()$'piTwo'[[2L]], 
      main = 'Enterotype: \'Prevotella\'', # 'Enterotype 2', 
      ylab = 'Abundancy Proportions', 
      theta = round(piOne()$'theta'[[2L]], 3L))
  drawPiPlot(
      countsData = generatedCounts()$piDirList[[3L]], 
      piOneObj = piOne()$'piVec'[[3L]],
      piTwoObj = piTwo()$'piTwo'[[3L]], 
      main = 'Enterotype: \'Ruminococcus\'', # 'Enterotype 3', 
      ylab = 'Abundancy Proportions', 
      theta = round(piOne()$'theta'[[3L]], 3L))
} else {}
@




<<mcPower>>=
print(output$singleMcWaldResults)
@


<<plotPowerSampleSize>>=
par(mar = c(4, 4, 1, 1))
plot(mcHmpWaldResults()$'seqSizes', mcHmpWaldResults()$'pow', 
    xlim = input$sampleSizes + c(-2L, 2L), 
    ylim = c(0, 1.1), pch = 19, lwd = 1,
    type = 'o', #main = 'Power vs. Sample Size',
    xlab = 'sample size', ylab = 'power')
abline(h = c(0, input$alpha, 1), lty = 4, col = 'gray70', lwd = 2)
text(x =  min(input$sampleSizes), y = input$alpha, pos = 3, 
    labels = paste0('alpha = ', input$alpha), cex = 1.3)

### showing power and sample size towards the end of the graph
points(coords, pch = 3, lwd = 3, cex = 2.5, col = 'red2')
sampleVec <- seq(
    from = input$sampleSizes[1L], to = input$sampleSizes[2L],
    length = 100)

coords <- list('x' = sampleVec[80])
findSpecificPowFun <- approxfun(
    x = mcHmpWaldResults()$'seqSizes', 
    y = mcHmpWaldResults()$'pow')

resCoords <- c(
    'x' = coords[['x']], 
    'y' = findSpecificPowFun(coords[['x']])
)
lines(x = c(resCoords['x'], resCoords['x']), 
    y = c(0, resCoords['y']), 
    lty = 4, col = 'red2', lwd = 2)
lines(x = c(0, resCoords['x']), 
    y = c(resCoords['y'], resCoords['y']), 
    lty = 4, col = 'red2', lwd = 2)

text(x = coords[['x']], y = coords[['y']], 
#                text(x = resCoords['x'], y = resCoords['y'], 
    labels = paste0(
        'Size=', round(coords[['x']], 2L),
#                        'Size=', round(resCoords['x']),
        '\n Power=', 
        round(resCoords['y'], 3L)), 
    pos = 3, offset = 1, cex = 1.5)
@



\appendix
\section{R session informations}
The R session information (including the OS info, R version and all
packages used):

<<session-info, cache=FALSE>>=
sessionInfo()
Sys.time()
@
<<clean-up, include=FALSE>>=
rm(.knitr.author); rm(.knitr.author)
@

\end{document}
